package cs.niu.edu.messenger.resources;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import cs.niu.edu.messenger.model.Comment;
import cs.niu.edu.messenger.service.CommentService;

@Path("/")	// Since path is referenced from message resource
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public class CommentResource {
	
	private CommentService commentservice=new CommentService();
	
	@GET
	public List<Comment> getAllComments(@PathParam("messageId") long messageId){
		return commentservice.getAllComments(messageId);
	}
	
	@POST
	public Comment updateMessage(@PathParam("messageId") long messageId, Comment comment){
		comment.setId(id);
		return commentservice.updateComment(messageId, comment)
	}
	
	@GET
	@Path("/{commentId}")	// MessageId is in previous call, but this class has access to entire path, so it's okay
	public String getComment(@PathParam("messageId") Long messageId,@PathParam("commentId") Long commentId){
		return "Message Id: "+messageId+" comment id: "+commentId;
	}
	
}
